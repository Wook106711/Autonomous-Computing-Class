{"episode_id": 512, "content_type": "video/mp4", "encoder_version": {"backend": "ffmpeg", "version": "b'ffmpeg version 7.0.1 Copyright (c) 2000-2024 the FFmpeg developers\\nbuilt with gcc 12.3.0 (conda-forge gcc 12.3.0-7)\\nconfiguration: --prefix=/home/conda/feedstock_root/build_artifacts/ffmpeg_1716729489913/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac --cc=/home/conda/feedstock_root/build_artifacts/ffmpeg_1716729489913/_build_env/bin/x86_64-conda-linux-gnu-cc --cxx=/home/conda/feedstock_root/build_artifacts/ffmpeg_1716729489913/_build_env/bin/x86_64-conda-linux-gnu-c++ --nm=/home/conda/feedstock_root/build_artifacts/ffmpeg_1716729489913/_build_env/bin/x86_64-conda-linux-gnu-nm --ar=/home/conda/feedstock_root/build_artifacts/ffmpeg_1716729489913/_build_env/bin/x86_64-conda-linux-gnu-ar --disable-doc --disable-openssl --enable-demuxer=dash --enable-hardcoded-tables --enable-libfreetype --enable-libharfbuzz --enable-libfontconfig --enable-libopenh264 --enable-libdav1d --enable-gnutls --enable-libmp3lame --enable-libvpx --enable-libass --enable-pthreads --enable-vaapi --enable-libopenvino --enable-gpl --enable-libx264 --enable-libx265 --enable-libaom --enable-libsvtav1 --enable-libxml2 --enable-pic --enable-shared --disable-static --enable-version3 --enable-zlib --enable-libopus --pkg-config=/home/conda/feedstock_root/build_artifacts/ffmpeg_1716729489913/_build_env/bin/pkg-config\\nlibavutil      59.  8.100 / 59.  8.100\\nlibavcodec     61.  3.100 / 61.  3.100\\nlibavformat    61.  1.100 / 61.  1.100\\nlibavdevice    61.  1.100 / 61.  1.100\\nlibavfilter    10.  1.100 / 10.  1.100\\nlibswscale      8.  1.100 /  8.  1.100\\nlibswresample   5.  1.100 /  5.  1.100\\nlibpostproc    58.  1.100 / 58.  1.100\\n'", "cmdline": ["ffmpeg", "-nostats", "-loglevel", "error", "-y", "-f", "rawvideo", "-s:v", "288x288", "-pix_fmt", "rgb24", "-framerate", "10", "-i", "-", "-vf", "scale=trunc(iw/2)*2:trunc(ih/2)*2", "-vcodec", "libx264", "-pix_fmt", "yuv420p", "-r", "10", "/home/kaai/Autonomous Computing/video/openaigym.video.0.64419.video000512.mp4"]}}